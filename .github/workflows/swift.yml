name: Continuous Integration Checks

on: [ push, pull_request ]

jobs:
    check_bindings:
        runs-on: ubuntu-20.04
        env:
            TOOLCHAIN: stable
        steps:
            -   name: Checkout source code
                uses: actions/checkout@v2
            -   name: Checkout Rust-Lightning and LDK-C-Bindings git
                run: |
                    git config --global user.email "ldk-ci@example.com"
                    git config --global user.name "LDK CI"
                    # Note this is a different endpoint, as we need one non-upstream commit!
                    git clone https://git.bitcoin.ninja/rust-lightning
                    cd rust-lightning
                    git checkout origin/2021-03-java-bindings-base
                    cd ..
                    git clone https://github.com/lightningdevkit/ldk-c-bindings
            -   name: Install native Rust toolchain, Valgrind, and build utilitis
                run: |
                    sudo apt-get update
                    sudo apt-get -y dist-upgrade
                    sudo apt-get -y install cargo valgrind lld git g++ clang curl
            -   name: Install cbindgen
                run: cargo install --force cbindgen
            -   name: Install Swift Toolchain
                run: |
                    curl https://swift.org/builds/swift-5.4.2-release/ubuntu2004/swift-5.4.2-RELEASE/swift-5.4.2-RELEASE-ubuntu20.04.tar.gz > swift-5.4.2-RELEASE-ubuntu20.04.tar.gz
                    if [ "$(sha256sum swift-5.4.2-RELEASE-ubuntu20.04.tar.gz | awk '{ print $1 }')" != "86b849d9f6ba2eda4e12ea5eafaa0748bffcd6272466b514c2b0fd4a829c63a4" ]; then
                      echo "Bad hash"
                      exit 1
                    fi
                    tar xvvf swift-5.4.2-RELEASE-ubuntu20.04.tar.gz
            -   name: Regenerate C bindings
                run: |
                    cd ldk-c-bindings
                    ./genbindings.sh ../rust-lightning true
                    cd ..
            -   name: Debug bindings target directory structure
                run: |
                    python ci/walker.py ldk-c-bindings/lightning-c-bindings/target
            -   name: Copy new headers into bindings
                run: |
                    mkdir -p ci/LDKSwift/Sources/LDKHeaders/include
                    cp ldk-c-bindings/lightning-c-bindings/include/*.h ci/LDKSwift/Sources/LDKHeaders/include/
                    cp ldk-c-bindings/ldk-net/ldk_net.h ci/LDKSwift/Sources/LDKHeaders/include/
                    cp ldk-c-bindings/ldk-net/ldk_net.c ci/LDKSwift/Sources/LDKHeaders/
            -   name: Set up Python
                uses: actions/setup-python@v2
            -   name: Fix header files
                run: |
                    python ci/fix_header_includes.py
            -   name: Generate Swift bindings and copy batteries
                run: |
                    LDK_SWIFT_GENERATOR_INPUT_HEADER_PATH="ldk-c-bindings/lightning-c-bindings/include/lightning.h" LDK_SWIFT_GENERATOR_OUTPUT_DIRECTORY_PATH="ci/LDKSwift/Sources/LDKSwift" python ./
                    cp -R bindings/batteries ci/LDKSwift/Sources/LDKSwift
            -   name: Fix Swift files
                run: |
                    python ci/fix_swift_imports.py
            -   name: Debug CI directory structure
                run: |
                    python ci/walker.py ci/
            -   name: Build Swift bindings package
                run: |
                    cd ci/LDKSwift
                    LDK_C_BINDINGS_BASE="../../ldk-c-bindings" RUST_BACKTRACE=1 ../../swift-5.4.2-RELEASE-ubuntu20.04/usr/bin/swift build
                    cd ../../
            -   name: Test Swift bindings package
                run: |
                    cd ci/LDKSwift
                    LDK_C_BINDINGS_BASE="../../ldk-c-bindings" RUST_BACKTRACE=1 ../../swift-5.4.2-RELEASE-ubuntu20.04/usr/bin/swift test -v
            -   name: Check that the latest headers are in the swift repo
                run: |
                    git diff --exit-code
